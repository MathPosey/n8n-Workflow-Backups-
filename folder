{
  "active": false,
  "connections": {
    "Config": {
      "main": [
        [
          {
            "node": "Get Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Is File too large?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Workflows": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is File too large?": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Config1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config1": {
      "main": [
        [
          {
            "node": "List files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List files": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Get Workflows1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Workflows1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit existing file1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create new file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-06T03:58:15.243Z",
  "id": "SwsqK4UizaTioSiF",
  "isArchived": false,
  "meta": {
    "templateId": "5851",
    "templateCredsSetupCompleted": true
  },
  "name": "n8nWorkflowBackups",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "d5efec23-eefc-443b-9e6d-4f41ee240d88",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        3712,
        720
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {},
      "id": "ede04e40-7152-40f8-9860-942b15fba268",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        2832,
        400
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "bbf6dea6-eee2-452d-9607-37d7fa90f3cc",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        3056,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "=MathPosey",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "=n8n-Workflow-Backups-",
          "mode": "name"
        },
        "filePath": "={{ $('Config').item.json.sub_path }}",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=({{$json.github_status}})"
      },
      "id": "e72473e3-d4e5-4306-99c2-5961515060f2",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        3520,
        400
      ],
      "webhookId": "b440dead-fad0-4546-8ca7-201aa2ea2936",
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "xbzooUXVcAxGUUX7",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "=MathPosey",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-Workflow-Backups-",
          "mode": "name"
        },
        "filePath": "={{ $('Config').item.json.sub_path }}/{{ $('Get Workflows').item.json.name }}.json\n",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=({{$json.github_status}})"
      },
      "id": "ce6f990e-4900-442d-9998-810dace92943",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        3488,
        208
      ],
      "webhookId": "1dfc4103-7c23-4814-a0b5-dd4f5a96d36b",
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "xbzooUXVcAxGUUX7",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "bb64ed2c-5193-4b8f-a9e8-55cb83ea244c",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              },
              "leftValue": "={{ $json.updatedAt }}",
              "rightValue": "={{ $now.minus(1, 'days') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "06d3f09c-ca08-4a4a-825b-6cb2e8ef3c39",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "position": [
        1728,
        400
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "# Links\n- ## [Github Folder](https://github.com/AndrewBoichenko/n8n-workflows/)",
        "height": 120,
        "width": 400
      },
      "id": "3803f1ca-9296-46ce-8e35-01d8c5f9812c",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# How it works \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `repo_path` for the directory path and `ID.json` for the filename.\nThe Repo Owner, Repo Name and Main folder are set using the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\nPlease check out my other items on [gumroad](https://boanse.gumroad.com/?section=k_Sn6LcT_dzJFnp5jmsM5A%3D%3D)\nYou might also like something else☺️",
        "height": 340,
        "width": 400
      },
      "id": "ea1096b7-ac85-41ef-98b9-88e2f50b9d44",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "3ddd66d9-36a6-4aef-aa99-0a28421f0410",
      "name": "Get Workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        1392,
        400
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "7Wrsiiim3mlOlIY9",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "03f51f9c-4681-4423-91d2-d32f4c18d6bc",
              "name": "repo_owner",
              "type": "string",
              "value": "MathPosey"
            },
            {
              "id": "0c9b521a-b698-4b43-9eb0-bbf744760158",
              "name": "repo_name",
              "type": "string",
              "value": "n8n-Workflow-Backups-"
            },
            {
              "id": "91627e70-a71a-4be0-a6f6-b04d5c8469d8",
              "name": "repo_path",
              "type": "string",
              "value": "n8n-workflow-Backups-"
            },
            {
              "id": "983a2c87-9d69-4d64-ab88-ec1b1117c6e6",
              "name": "sub_path",
              "type": "string",
              "value": "folder"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "36774b8c-4e8a-411d-8d22-a58870d17152",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        1152,
        400
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "ecb7924b-23f3-480d-aede-79edaa55be2a",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        848,
        400
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "MathPosey",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-Workflow-Backups-",
          "mode": "name"
        },
        "filePath": "={{ $('Config').item.json.sub_path }}",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "a58a2c07-0162-433f-93e5-9fceabec5edc",
      "name": "Get a file",
      "type": "n8n-nodes-base.github",
      "position": [
        2176,
        208
      ],
      "webhookId": "c12420d3-b858-4ee4-81c4-9adc03e30865",
      "typeVersion": 1.1,
      "alwaysOutputData": false,
      "credentials": {
        "githubOAuth2Api": {
          "id": "xbzooUXVcAxGUUX7",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "628f6e8f-d817-4c53-89ec-b1acbb3dfef8",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "63fc68bb-63d0-40a8-92e4-2a62b5a71812",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "97b1e70b-a584-46af-87de-2be74333c285",
      "name": "Is File too large?",
      "type": "n8n-nodes-base.if",
      "position": [
        2400,
        208
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "78dd800a-e7df-4834-9e38-e0d8c5aa0c34",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2608,
        208
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1adaa738-6b43-403d-8ddd-6b1556c8e344",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        2048,
        400
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "03f51f9c-4681-4423-91d2-d32f4c18d6bc",
              "name": "repo_owner",
              "type": "string",
              "value": "MathPosey"
            },
            {
              "id": "0c9b521a-b698-4b43-9eb0-bbf744760158",
              "name": "repo_name",
              "type": "string",
              "value": "n8n-Workflow-Backups-"
            },
            {
              "id": "91627e70-a71a-4be0-a6f6-b04d5c8469d8",
              "name": "repo_path",
              "type": "string",
              "value": "n8n-workflow-Backups-"
            },
            {
              "id": "983a2c87-9d69-4d64-ab88-ec1b1117c6e6",
              "name": "sub_path",
              "type": "string",
              "value": "folder"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "febd9dc5-4c67-41a6-8f92-8d338fd93831",
      "name": "Config1",
      "type": "n8n-nodes-base.set",
      "position": [
        1184,
        1232
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "84a1afcb-772c-44ee-a174-498e6d0c314c",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        880,
        1232
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "MathPosey",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-Workflow-Backups-",
          "mode": "name"
        },
        "filePath": "="
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1360,
        1232
      ],
      "id": "1459b1dd-5a86-4a3c-ac25-ae67a1f4383d",
      "name": "List files",
      "webhookId": "5eb786f9-d1d8-4bc9-8a2b-f906036bd9d8",
      "credentials": {
        "githubOAuth2Api": {
          "id": "xbzooUXVcAxGUUX7",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "name",
              "renameField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1552,
        1232
      ],
      "id": "574ab1e1-ff3c-4fb1-b1e2-1de00f63a87a",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "443db8ec-4b7d-4dc7-b8ac-125ced962833",
      "name": "Get Workflows1",
      "type": "n8n-nodes-base.n8n",
      "position": [
        1744,
        1232
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "7Wrsiiim3mlOlIY9",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1984,
        1216
      ],
      "id": "5562e8f7-db70-46d2-90e3-93be63e97dd2",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5d7b1231-f333-4a28-867b-0dee9bc88fa3",
              "leftValue": "={{ $('Get Workflows1').item.json.name }}",
              "rightValue": "={{ $('List files').item.json.name }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "d4b4c2e5-f390-468f-9400-67904e5d6b49",
              "leftValue": "={{ $('List files').item.json.name }}",
              "rightValue": "={{ $('List files').item.json.sha }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2624,
        1216
      ],
      "id": "89369a95-0bc5-410d-8a03-00c9569ac32d",
      "name": "If"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "=MathPosey",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-Workflow-Backups-",
          "mode": "name"
        },
        "filePath": "={{\n  'backups/'\n  + ($json.data?.id || $json.id)\n  + '__'\n  + ( ($json.data?.name || $json.name || 'workflow') + '' )\n      .normalize('NFKD').replace(/[\\u0300-\\u036f]/g,'')\n      .replace(/[^A-Za-z0-9._-]+/g,'_').slice(0,80)\n  + '.json'\n}}\n",
        "fileContent": "{{ JSON.stringify($json.data ?? $json, null, 2) }}",
        "commitMessage": "=\n",
        "additionalParameters": {
          "branch": {
            "branch": "main"
          }
        }
      },
      "id": "e2be94e8-5f19-47aa-83e0-6a17b4b55e1e",
      "name": "Edit existing file1",
      "type": "n8n-nodes-base.github",
      "position": [
        3248,
        1152
      ],
      "webhookId": "1dfc4103-7c23-4814-a0b5-dd4f5a96d36b",
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "xbzooUXVcAxGUUX7",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "MathPosey",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "=n8n-Workflow-Backups-",
          "mode": "name"
        },
        "filePath": "={{ \n  'backups/' +\n  $json.data.id + '__' +\n  ( ($json.data.name || 'workflow') + '' )\n    .normalize('NFKD').replace(/[\\u0300-\\u036f]/g,'')\n    .replace(/[^A-Za-z0-9._-]+/g,'_')\n    .slice(0,80) +\n  '.json'\n}}\n",
        "fileContent": "={{ JSON.stringify($json.data ?? $json, null, 2) }}",
        "commitMessage": "=",
        "additionalParameters": {
          "branch": {
            "branch": "main"
          }
        }
      },
      "id": "acfaaf7e-e1ca-45be-b283-a0fa01ab5231",
      "name": "Create new file1",
      "type": "n8n-nodes-base.github",
      "position": [
        3248,
        1392
      ],
      "webhookId": "b440dead-fad0-4546-8ca7-201aa2ea2936",
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "xbzooUXVcAxGUUX7",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "6655f56f-b447-43eb-84a2-be8b71524af7",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "different"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Different"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "fd0fcdea-e8c0-42be-ba51-5cd2b71ed247",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "new"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "New"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "ca3b1c68-d756-4de5-b69b-147526e19e35",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{$json.github_status}}",
                    "rightValue": "same"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Same"
            }
          ]
        },
        "options": {}
      },
      "id": "c4139649-c1fd-4c1a-b90f-92ecac409fa2",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        3280,
        400
      ],
      "typeVersion": 3.2
    }
  ],
  "pinData": {
    "Config": [
      {
        "json": {
          "timestamp": "2025-08-27T13:39:15.375-04:00",
          "Readable date": "August 27th 2025, 1:39:15 pm",
          "Readable time": "1:39:15 pm",
          "Day of week": "Wednesday",
          "Year": "2025",
          "Month": "August",
          "Day of month": "27",
          "Hour": "13",
          "Minute": "39",
          "Second": "15",
          "Timezone": "America/New_York (UTC-04:00)",
          "repo_owner": "MathPosey",
          "repo_name": "n8n-Workflow-Backups-",
          "repo_path": "n8n-workflow-Backups-",
          "sub_path": "folder"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-06T03:58:15.243Z",
      "updatedAt": "2025-08-06T03:58:15.243Z",
      "role": "workflow:owner",
      "workflowId": "SwsqK4UizaTioSiF",
      "projectId": "VFY7knhJH9Pt1e6U"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-27T17:58:14.122Z",
  "versionId": "781d2a56-4482-42ef-8aee-28e1653e597f"
}